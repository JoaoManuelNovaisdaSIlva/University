#BlueJ class context
comment0.target=Circulo
comment0.text=\n\ Write\ a\ description\ of\ class\ Circulo\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=Circulo()
comment1.text=\n\ Construtor\ por\ omissao\n\ tem\ que\ ser\ criadas\ coisas\ validas,\ como\ um\ cirulo\ com\ raio>0\n
comment10.params=
comment10.target=double\ calculaArea()
comment11.params=
comment11.target=double\ calculaPerimetro()
comment12.params=
comment12.target=Circulo\ clone()
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment14.params=
comment14.target=java.lang.String\ toString()
comment2.params=x\ y\ raio
comment2.target=Circulo(int,\ int,\ double)
comment2.text=\n\ Contrutor\ parametrizado\n
comment3.params=p\ raio
comment3.target=Circulo(Ponto,\ double)
comment4.params=umCirc
comment4.target=Circulo(Circulo)
comment4.text=\n\ Construtor\ de\ copia\n
comment5.params=
comment5.target=Ponto\ getCentro()
comment5.text=\n\ public\ double\ getX(){\n\ \ \ \ return\ this.x;\n\ }\n\ \ \ \ //\ b)\n\ public\ double\ getY(){\n\ \ \ \ return\ this.y;\n\ }\n
comment6.params=
comment6.target=double\ getRaio()
comment7.params=p
comment7.target=void\ setCentro(Ponto)
comment7.text=\n\ public\ void\ setX(double\ novoX){\n\ \ \ \ this.x\ \=\ novoX;\n\ }\n\n\ public\ void\ setY(double\ novoY){\n\ \ \ \ this.y\ \=\ novoY;\n\ }\n
comment8.params=novoRaio
comment8.target=void\ setRaio(double)
comment9.params=p
comment9.target=void\ alteraCentro(Ponto)
numComments=15
